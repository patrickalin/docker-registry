version: '3.4'
services:
  registry:
    image: '${IMAGE_REGISTRY}:${TAG_REGISTRY}'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 100M
      restart_policy:
        condition: on-failure
      labels:
        - traefik.port=5000
        - 'traefik.frontend.rule=Host:registry.services.alin.be'
        - 'traefik.frontend.entryPoints=http,https'
        - traefik.backend.loadbalancer.method=wrr
        - traefik.docker.network=traefik-net
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
    networks:
      - traefik-net
    volumes:
      - 'registry:/var/lib/registry'
  registry-ui:
    image: '${REGISTRY}/${IMAGE_REGISTRY_UI}:${TAG_REGISTRY_UI}'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.6'
          memory: 100M
      restart_policy:
        condition: on-failure
      labels:
        - traefik.port=8000
        - 'traefik.frontend.rule=Host:registry-ui.services.alin.be'
        - 'traefik.frontend.entryPoints=http,https'
        - traefik.backend.loadbalancer.method=wrr
        - traefik.docker.network=traefik-net
        - traefik.frontend.redirect.entryPoint=https
    configs:
      - source: config
        target: /opt/config.yml
    networks:
      - traefik-net
configs:
  config:
    file: ./config.yml
networks:
  traefik-net:
    external: true
volumes:
  registry:
    driver_opts:
      type: nfs
      o: 'addr=trinity.alin.be,rw,nfsvers=4,nolock'
      device: ':/volume1/development/docker-data/registry/data'