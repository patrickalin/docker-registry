{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.13.8","NGINX_HOST=documentation.servicess.alin.be","NGINX_PORT=80"],"Cmd":["nginx","-g","daemon off;"],"Healthcheck":{"Test":["CMD-SHELL","curl -f http://localhost/ || exit 1"],"Interval":10000000000,"Timeout":10000000000,"Retries":3},"ArgsEscaped":true,"Image":"sha256:6518ca5d6a07ce7b074003cb287bac76ffce870a848b54175168d3e702096e63","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":[],"Labels":{"maintainer":"NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"},"StopSignal":"SIGTERM"},"container":"1f37f57d916d1412467ae10a78120a78235d22daa16b759e91b94c1490df3e89","container_config":{"Hostname":"1f37f57d916d","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.13.8","NGINX_HOST=documentation.servicess.alin.be","NGINX_PORT=80"],"Cmd":["/bin/sh","-c","#(nop) ","HEALTHCHECK \u0026{[\"CMD-SHELL\" \"curl -f http://localhost/ || exit 1\"] \"10s\" \"10s\" \"0s\" '\\x03'}"],"Healthcheck":{"Test":["CMD-SHELL","curl -f http://localhost/ || exit 1"],"Interval":10000000000,"Timeout":10000000000,"Retries":3},"ArgsEscaped":true,"Image":"sha256:6518ca5d6a07ce7b074003cb287bac76ffce870a848b54175168d3e702096e63","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":[],"Labels":{"maintainer":"NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"},"StopSignal":"SIGTERM"},"created":"2018-02-17T17:00:02.360551776Z","docker_version":"17.12.0-ce","history":[{"created":"2018-01-09T21:13:01.165340448Z","created_by":"/bin/sh -c #(nop) ADD file:df48d6d6df42a01380557aebd4ca02807fc08a76a1d1b36d957e59a41c69db0b in / "},{"created":"2018-01-09T21:13:01.402230769Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2018-01-10T04:08:56.242667943Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2018-01-10T04:08:56.446738753Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.13.8","empty_layer":true},{"created":"2018-01-10T04:10:11.585580142Z","created_by":"/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t\u0026\u0026 CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t\u0026\u0026 addgroup -S nginx \t\u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t\u0026\u0026 apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t\u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break; \tdone; \ttest -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t\u0026\u0026 rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t\u0026\u0026 mkdir -p /usr/src \t\u0026\u0026 tar -zxC /usr/src -f nginx.tar.gz \t\u0026\u0026 rm nginx.tar.gz \t\u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION \t\u0026\u0026 ./configure $CONFIG --with-debug \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 mv objs/nginx objs/nginx-debug \t\u0026\u0026 mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t\u0026\u0026 mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t\u0026\u0026 mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t\u0026\u0026 mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t\u0026\u0026 ./configure $CONFIG \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\u0026\u0026 rm -rf /etc/nginx/html/ \t\u0026\u0026 mkdir /etc/nginx/conf.d/ \t\u0026\u0026 mkdir -p /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/ \t\u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t\u0026\u0026 install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t\u0026\u0026 install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t\u0026\u0026 install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t\u0026\u0026 install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t\u0026\u0026 ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t\u0026\u0026 strip /usr/sbin/nginx* \t\u0026\u0026 strip /usr/lib/nginx/modules/*.so \t\u0026\u0026 rm -rf /usr/src/nginx-$NGINX_VERSION \t\t\u0026\u0026 apk add --no-cache --virtual .gettext gettext \t\u0026\u0026 mv /usr/bin/envsubst /tmp/ \t\t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t\u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 apk del .gettext \t\u0026\u0026 mv /tmp/envsubst /usr/local/bin/ \t\t\u0026\u0026 apk add --no-cache tzdata \t\t\u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log \t\u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"},{"created":"2018-01-10T04:10:12.355007421Z","created_by":"/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "},{"created":"2018-01-10T04:10:13.003338567Z","created_by":"/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "},{"created":"2018-01-10T04:10:13.418726553Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80/tcp","empty_layer":true},{"created":"2018-01-10T04:10:13.78827244Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]","empty_layer":true},{"created":"2018-01-10T04:10:14.172224507Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2018-02-17T16:59:58.265445415Z","created_by":"/bin/sh -c #(nop) COPY dir:a5bc2bc014ca86982c9039c0e0fffcf4ab358d3f94751448bbe1a513ea727076 in /usr/share/nginx/html "},{"created":"2018-02-17T16:59:58.372773904Z","created_by":"/bin/sh -c #(nop) COPY file:ab57fcf02c07a2d164b8474764d455c335d3c8f606987133b227960c20b081b8 in /etc/nginx/.htpasswd "},{"created":"2018-02-17T16:59:58.49243861Z","created_by":"/bin/sh -c #(nop) COPY dir:faebe5b4349f0546cd6fe4cd1c5b014667316dbcdac5a4fdda3684c6ecaf050a in /etc/nginx/conf.d/ "},{"created":"2018-02-17T16:59:58.608485719Z","created_by":"/bin/sh -c #(nop) COPY file:7ebad589f94de5622726c06a64eabcef901d1a09dcd184dfd17c62ac95521b18 in /etc/localtime "},{"created":"2018-02-17T17:00:01.903500522Z","created_by":"/bin/sh -c apk add --update bash curl"},{"created":"2018-02-17T17:00:02.072404049Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_HOST=documentation.servicess.alin.be","empty_layer":true},{"created":"2018-02-17T17:00:02.216437889Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_PORT=80","empty_layer":true},{"created":"2018-02-17T17:00:02.360551776Z","created_by":"/bin/sh -c #(nop)  HEALTHCHECK \u0026{[\"CMD-SHELL\" \"curl -f http://localhost/ || exit 1\"] \"10s\" \"10s\" \"0s\" '\\x03'}","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:d39d92664027be502c35cf1bf464c726d15b8ead0e3084be6e252a161730bc82","sha256:7066df57739cd6868a05bb4dab31e925f2d6d48f24a428a55afb535ba807a8ae","sha256:343bb8320f2b0c84419a46bffd9ec3031dbc08ab1ba61a977d763aa3052143d9","sha256:f93c2b24cb183eb0e55dd9bcd54a02b2b71200399996e4ce24f2b8a3f9b3c046","sha256:bac8202c35b652f5332eddb21f7a351efa0412bf441e53ffe52095f2a18058ec","sha256:d65f6667cb524939ebd3b9e9427c7c9b3368f9d2d5d343f187ec31027dcb9401","sha256:ebff16b15e0cec77327e14daa07ee013324b4d75b33566c73d67a4aad03db5cc","sha256:031756b5e4146108c26ae2ba3760ea4c9777cf2d88b7ecdbef882f81ae5d2ce5","sha256:66b5c043e0374662785fca18c50533644d09b3f1c45912b7ae9ddfcb8d22c847"]}}